#!/usr/bin/env python3
"""
Script para testar conectividade e depend√™ncias do sistema
"""

import requests
import sys
import subprocess
import os

def test_url(url, description):
    """Testa se uma URL est√° acess√≠vel"""
    try:
        response = requests.head(url, timeout=10)
        if response.status_code == 200:
            print(f"‚úÖ {description}: OK")
            return True
        else:
            print(f"‚ùå {description}: Status {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå {description}: Erro - {e}")
        return False

def test_python_dependencies():
    """Testa se as depend√™ncias Python est√£o instaladas"""
    print("\nüîç Testando depend√™ncias Python...")
    
    dependencies = [
        ('fastapi', 'FastAPI'),
        ('uvicorn', 'Uvicorn'),
        ('face_recognition', 'face_recognition'),
        ('opencv-python', 'OpenCV'),
        ('sqlalchemy', 'SQLAlchemy')
    ]
    
    all_ok = True
    for package, name in dependencies:
        try:
            __import__(package.replace('-', '_'))
            print(f"‚úÖ {name}: OK")
        except ImportError:
            print(f"‚ùå {name}: N√£o instalado")
            all_ok = False
    
    return all_ok

def test_server():
    """Testa se o servidor est√° rodando"""
    print("\nüåê Testando servidor local...")
    
    try:
        response = requests.get('http://localhost:8001/', timeout=5)
        if response.status_code == 200:
            print("‚úÖ Servidor local: OK")
            return True
        else:
            print(f"‚ùå Servidor local: Status {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå Servidor local: Erro - {e}")
        return False

def test_cdns():
    """Testa conectividade com CDNs"""
    print("\nüì° Testando conectividade com CDNs...")
    
    cdns = [
        ('https://cdn.jsdelivr.net/npm/face-api.js@0.22.2/dist/face-api.min.js', 'CDN Principal (jsdelivr)'),
        ('https://unpkg.com/face-api.js@0.22.2/dist/face-api.min.js', 'CDN Alternativa (unpkg)'),
        ('https://cdn.jsdelivr.net/npm/face-api.js/weights/tiny_face_detector_model-weights_manifest.json', 'Modelos de Detec√ß√£o'),
    ]
    
    all_ok = True
    for url, description in cdns:
        if not test_url(url, description):
            all_ok = False
    
    return all_ok

def test_camera_access():
    """Testa se a c√¢mera pode ser acessada (simula√ß√£o)"""
    print("\nüìπ Testando acesso √† c√¢mera...")
    
    # No macOS, verificar se h√° dispositivos de v√≠deo
    try:
        result = subprocess.run(['system_profiler', 'SPCameraDataType'], 
                              capture_output=True, text=True, timeout=10)
        if result.returncode == 0 and 'Camera' in result.stdout:
            print("‚úÖ C√¢mera detectada no sistema")
            return True
        else:
            print("‚ö†Ô∏è C√¢mera n√£o detectada ou n√£o acess√≠vel")
            return False
    except Exception as e:
        print(f"‚ö†Ô∏è N√£o foi poss√≠vel verificar c√¢mera: {e}")
        return False

def main():
    """Fun√ß√£o principal"""
    print("üîß Teste de Conectividade - Sistema de Reconhecimento Facial")
    print("=" * 60)
    
    # Testar depend√™ncias Python
    python_ok = test_python_dependencies()
    
    # Testar CDNs
    cdns_ok = test_cdns()
    
    # Testar servidor
    server_ok = test_server()
    
    # Testar c√¢mera
    camera_ok = test_camera_access()
    
    # Resumo
    print("\n" + "=" * 60)
    print("üìä RESUMO DOS TESTES")
    print("=" * 60)
    
    print(f"Python Dependencies: {'‚úÖ OK' if python_ok else '‚ùå PROBLEMAS'}")
    print(f"CDNs: {'‚úÖ OK' if cdns_ok else '‚ùå PROBLEMAS'}")
    print(f"Servidor Local: {'‚úÖ OK' if server_ok else '‚ùå PROBLEMAS'}")
    print(f"C√¢mera: {'‚úÖ OK' if camera_ok else '‚ö†Ô∏è VERIFICAR'}")
    
    # Recomenda√ß√µes
    print("\nüí° RECOMENDA√á√ïES:")
    
    if not python_ok:
        print("- Execute: pip3 install -r requirements.txt")
    
    if not cdns_ok:
        print("- Verifique sua conex√£o com a internet")
        print("- Verifique se h√° firewall/proxy bloqueando")
        print("- O sistema funcionar√° em modo manual")
    
    if not server_ok:
        print("- Execute: python3 run.py")
    
    if not camera_ok:
        print("- Verifique permiss√µes de c√¢mera no navegador")
        print("- Verifique se a c√¢mera n√£o est√° sendo usada por outro app")
    
    if python_ok and cdns_ok and server_ok:
        print("‚úÖ Sistema pronto para uso!")
        print("üåê Acesse: http://localhost:8001")
    else:
        print("‚ö†Ô∏è Alguns problemas detectados. Verifique as recomenda√ß√µes acima.")

if __name__ == "__main__":
    main() 